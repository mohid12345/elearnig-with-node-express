<%- include("../partials/admin-header")%>
<!-- <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="screen-overlay"></div>
<aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
        <a href="index.html" class="brand-wrap">
            <img src="/adminAssets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard" />
        </a>
        <div>
            <button class="btn btn-icon btn-aside-minimize"><i class="text-muted material-icons md-menu_open"></i></button>
        </div>
    </div>
    <nav>
        <ul class="menu-aside">
            <li class="menu-item">
                <a class="menu-link" href="/creator/creatorDashboard">
                    <i class="icon material-icons md-home"></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>

            <li class="menu-item active">
                <a class="menu-link" href="/creator/creator-course-list">
                    <i class="icon material-icons md-shopping_bag"></i>
                    <span class="text">Courses</span>
                </a>
            </li>
        </ul>
        <hr />
        <br />
        <br />
    </nav>
</aside>
<main class="main-wrap">
    <header class="main-header navbar">
        <div class="col-search">
            <form class="searchform">
                <div class="input-group">
                    <input list="search_terms" type="text" class="form-control" placeholder="Search term" />
                    <button class="btn btn-light bg" type="button"><i class="material-icons md-search"></i></button>
                </div>
                <datalist id="search_terms">
                    <option value="Products"></option>
                    <option value="New orders"></option>
                    <option value="Apple iphone"></option>
                    <option value="Ahmed Hassan"></option>
                </datalist>
            </form>
        </div>
        <div class="col-nav">
            <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                <i class="material-icons md-apps"></i>
            </button>
            <ul class="nav">
                <li class="nav-item">
                    <a class="nav-link btn-icon" href="#">
                        <i class="material-icons md-notifications animation-shake"></i>
                        <span class="badge rounded-pill">3</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                </li>
                <li class="nav-item">
                    <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                </li>
                <li class="dropdown nav-item">
                    <a
                        class="dropdown-toggle"
                        data-bs-toggle="dropdown"
                        href="#"
                        id="dropdownLanguage"
                        aria-expanded="false"
                        ><i class="material-icons md-public"></i
                    ></a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                        <a class="dropdown-item text-brand" href="#"
                            ><img src="/adminAssets/imgs/theme/flag-us.png" alt="English" />English</a
                        >
                        <a class="dropdown-item" href="#"
                            ><img src="/adminAssets/imgs/theme/flag-fr.png" alt="Français" />Français</a
                        >
                        <a class="dropdown-item" href="#"
                            ><img src="/adminAssets/imgs/theme/flag-jp.png" alt="Français" />日本語</a
                        >
                        <a class="dropdown-item" href="#"
                            ><img src="/adminAssets/imgs/theme/flag-cn.png" alt="Français" />中国人</a
                        >
                    </div>
                </li>
                <li class="dropdown nav-item">
                    <a
                        class="dropdown-toggle"
                        data-bs-toggle="dropdown"
                        href="#"
                        id="dropdownAccount"
                        aria-expanded="false"
                    >
                        <img class="img-xs rounded-circle" src="/adminAssets/imgs/people/avatar2.jpg" alt="User"
                    /></a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                        <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                        <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                        <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                        <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                        <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item text-danger" href="#"
                            ><i class="material-icons md-exit_to_app"></i>Logout</a
                        >
                    </div>
                </li>
            </ul>
        </div>
    </header>
    <section class="content-main">
        <div class="row">
            <div class="col-6">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>

                <div class="container mt-5">
                    <form
                        action="/creator/postadd-course"
                        method="post"
                        enctype="multipart/form-data"
                        onsubmit="return validateForm()"
                    >
                        <div class="form-group">
                            <label for="courseName">Course Name</label>
                            <div id="courseNameError" class="error-message text-danger"></div>
                            <input type="text" class="form-control" id="courseName" name="courseName" />
                        </div>
                        <div class="form-group">
                            <label for="courseDiscription">Course Description</label>
                            <div id="courseDiscriptionError" class="error-message text-danger"></div>
                            <textarea
                                class="form-control"
                                id="courseDiscription"
                                name="courseDiscription"
                                rows="3"
                            ></textarea>
                        </div>
                        <div class="form-group">
                            <label for="courseRequirements">Course Requirements</label>
                            <div id="courseRequirementsError" class="error-message text-danger"></div>
                            <textarea
                                class="form-control"
                                id="courseRequirements"
                                name="courseRequirements"
                                rows="3"
                            ></textarea>
                        </div>
                        <div class="form-group">
                            <label for="courseWho">Who this course for ?</label>
                            <div id="courseWhoError" class="error-message text-danger"></div>
                            <textarea class="form-control" id="courseForwho" name="courseForwho" rows="3"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="category">Category</label>
                            <select class="form-control" id="category" name="courseCategory">
                                <option value="">Select a category</option>
                                <% categories.forEach(category => {%>
                                <option value="<%= category.catgName %>"><%= category.catgName %></option>
                                <%}) %>
                            </select>
                            <div id="courseCategoryError" class="error-message text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="brand">Author</label>
                            <input type="text" class="form-control" id="courseAuthor" name="courseAuthor" />
                            <div id="courseAuthorError" class="error-message text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="amount">Regular Price (in Rupees)</label>
                            <input type="number" class="form-control" id="courseAmount" name="courseAmount" min="0" />
                            <div id="courseAmountError" class="error-message text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="amount">Total Duration (in Hours)</label>
                            <input type="number" class="form-control" id="courseDuration" name="courseDuration" min="0" />
                            <div id="courseDurationError" class="error-message text-danger"></div>
                        </div>
                        <div class="form-group">
                            <label for="amount">No of Lessons</label>
                            <input
                                type="number"
                                class="form-control"
                                id="courseLessonNos"
                                name="courseLessonNos"
                                required
                                min="1"
                                value="1"
                            />
                            <!-- <div id="courseLessonError" class="error-message text-danger"></div> -->
                        </div>

                        <hr />
                        <style>
                            .thumbnail-preview {
                                max-width: 50%;
                                max-height: 50px;
                                margin-top: 10px;
                            }
                        </style>

                        <div class="form-group my-3">
                            <label for="video">Course Thumbnail</label> &nbsp;
                            <input
                                type="file"
                                class="form-control"
                                id="courseImg"
                                name="courseImg"
                                accept="image/*"
                                multiple
                                required
                                onchange="previewImage()"
                            />
                        </div>
                        <span id="thumbnailPreview" class="thumbnail-preview"></span>

                        <button type="submit" class="btn btn-primary">Submit Details</button>
                    </form>

                    <!-- 
                    <form action="/admin/postadd-course-video" method="post" enctype="multipart/form-data">
                        <div id="videoFieldsContainer"></div>
                        <button type="submit" id="addVideoButton" class="btn btn-primary">Add Video</button>

                    </form> -->
                    <!-- <form action="/creator/postadd-course-video" method="post" enctype="multipart/form-data">
                        <div class="form-group my-3">
                            <label for="video">Course Video</label> &nbsp;
                            <input type="file" class="form-control" id="courseVid" name="courseVid" accept="video/mp4,video/x-m4v,video/*,mp4" required/>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Video</button>
                    </form> -->
                    <form action="/creator/postadd-course-video" method="post" enctype="multipart/form-data">
                        <div id="courseContainer">
                            <input
                                type="file"
                                id="courseVid"
                                name="courseVid"
                                accept="video/mp4,video/x-m4v,video/*,mp4"
                                multiple
                                required
                            />
                        </div>

                        <button type="submit" class="btn btn-primary">Add Video</button>
                    </form>

                    <!-- //sweetalert2 script -->
                    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                    <!-- //for img thumbnail preview -->
                    <script>
                        function previewImage() {
                            const input = document.getElementById("courseImg");
                            const preview = document.getElementById("thumbnailPreview");

                            // Ensure that a file is selected
                            if (input.files && input.files[0]) {
                                const reader = new FileReader();

                                reader.onload = function (e) {
                                    // Create an image element and set the source to the selected file
                                    const img = document.createElement("img");
                                    img.src = e.target.result;
                                    // Clear any previous preview
                                    preview.innerHTML = "";
                                    // Append the image to the preview container
                                    preview.appendChild(img);
                                };
                                // Read the selected file as a data URL
                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>

                    <!-- for dynamic multiple video start -->
                    <script>
                        // Wait for the document to be ready
                        document.addEventListener("DOMContentLoaded", function () {
                            // Add an event listener to the "No of Lessons" input field
                            const courseLessonNos = document.getElementById("courseLessonNos");
                            const courseContainer = document.getElementById("courseContainer");

                            function addVideoField() {
                                const numOfLessons = parseInt(courseLessonNos.value, 10);
                                courseContainer.innerHTML = ""; //clearing field
                                for (let i = 1; i <= numOfLessons; i++) {
                                    //make new fields
                                    const videoField = document.createElement("div");
                                    videoField.className = "form-group my-3";
                                    videoField.innerHTML = `
                    <label for="video">Lesson ${i} Video</label> &nbsp;
                    <input type="file" class="form-control" name="courseVid" accept="video/mp4,video/x-m4v,video/*,mp4">
                `;
                                    courseContainer.appendChild(videoField);
                                }
                            }
                            // Add event listener to handle changes in No of Lessons
                            courseLessonNos.addEventListener("input", addVideoField);
                            // Trigger the initial generation of video upload fields
                            addVideoField();
                        });
                    </script>

                    <!-- //sweetalert2 script -->
                    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const form = document.querySelector("form"); // Adjust the selector based on your form structure

                            form.addEventListener("submit", async function (event) {
                                event.preventDefault();

                                // Your existing form submission code

                                // Assuming you're using Fetch API for AJAX requests
                                try {
                                    const response = await fetch("/creator/postadd-course", {
                                        method: "POST",
                                        body: new FormData(form),
                                    });

                                    const responseData = await response.json();

                                    if (response.ok) {
                                        // Display success message using Swal
                                        Swal.fire({
                                            icon: "success",
                                            title: "Success",
                                            text: responseData.message,
                                        });

                                        // You can also access courseId if needed: responseData.courseId
                                    } else {
                                        // Display an error message using Swal
                                        Swal.fire({
                                            icon: "error",
                                            title: "Error",
                                            text: responseData.message,
                                        });
                                    }
                                } catch (error) {
                                    console.error("Error:", error);
                                }
                            });
                        });
                    </script>
                    <!-- for video form submit sweetalert2  start-->

                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const secondForm = document.querySelector("form[action ='/creator/postadd-course-video']");
                            const courseContainer = document.getElementById("courseContainer");

                            secondForm.addEventListener("submit", async function (event) {
                                event.preventDefault();
                                //form2 submissiton via fetch method
                                try {
                                    const response = await fetch("/creator/postadd-course-video", {
                                        method: "POST",
                                        body: new FormData(secondForm),
                                    });
                                    const responseData = await response.json();

                                    if (response.ok) {
                                        Swal.fire({
                                            icon: "success",
                                            title: "Success",
                                            text: responseData.message,
                                        }).then(() => {
                                            window.location.href = "/creator/creator-course-list";
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Error",
                                            text: responseData.message,
                                        });
                                    }
                                } catch (error) {
                                    console.error("Error:", error);
                                }
                            });
                        });
                    </script>
                    <!-- VIDEO SECTION END -->

                    
<!-- form1 validation -->
<script>
    function validateForm() {
        // Reset previous error messages
        clearErrorMessages();
    
        // Validation logic
        let isValid = true;
    
        // Validate courseName
        const courseName = document.getElementById('courseName').value.trim();
        if (courseName === '') {
            displayErrorMessage('courseNameError', 'Please enter the course name.');
            isValid = false;
        }
        
        // Validate courseDiscriptionError
        const courseDisc = document.getElementById('courseDiscription').value.trim(); // Fix typo here
        if (courseDisc === '') {
            displayErrorMessage('courseDiscriptionError', 'Please enter Description'); // Fix typo here
            isValid = false;
        }
        
        // Validate courseRequirementsError
        const courseReq = document.getElementById('courseRequirements').value.trim();
        if (courseReq === '') {
            displayErrorMessage('courseRequirementsError', 'Please enter course description');
            isValid = false;
        }
        
        // Validate courseWhoError
        const courseForwho = document.getElementById('courseForwho').value.trim();
        if (courseForwho === '') {
            displayErrorMessage('courseWhoError', 'Please enter - Who this course for?');
            isValid = false;
        }

          
        // Validate courseCategoryError
        const category = document.getElementById('category').value;
        if (category === '') {
            displayErrorMessage('courseCategoryError', 'Please select a category');
            isValid = false;
        }
        
        // Validate courseAuthorError
        const courseAuthor = document.getElementById('courseAuthor').value.trim();
        if (courseAuthor === '') {
            displayErrorMessage('courseAuthorError', 'Please enter author\'s name'); // Added escape for apostrophe
            isValid = false;
        }
        
        // Validate courseAmountError
        const courseAmount = document.getElementById('courseAmount').value.trim();
        if (courseAmount === '') {
            displayErrorMessage('courseAmountError', 'Please enter the price of the course');
            isValid = false;
        } else if (isNaN(courseAmount)) {
            displayErrorMessage('courseAmountError', 'Please enter a number');
            isValid = false;
        }
        
        // Validate courseDurationError
        const courseDuration = document.getElementById('courseDuration').value.trim();
        if (courseDuration === '') {
            displayErrorMessage('courseDurationError', 'Please enter the duration of the course');
            isValid = false;
        } else if (isNaN(courseDuration)) {
            displayErrorMessage('courseAmountError', 'Please enter a number');
            isValid = false;
        }
        
        return isValid;
    }
    
    function clearErrorMessages() {
        // Clear error messages for all fields
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach(element => element.innerHTML = '');
    }
    
    function displayErrorMessage(elementId, message) {
        // Display error message for a specific field
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.innerHTML = message;
        }
    }
</script>

                </div>
                <br />
            </div>
        </div>
    </section>

    <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
            <div class="col-sm-6">
            <div class="col-sm-6">
                    <div class="text-sm-end">
         
                    </div>
                </div>
            </div>
        </div>
    </footer>
</main>
<script src="/adminAssets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/adminAssets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/adminAssets/js/vendors/select2.min.js"></script>
<script src="/adminAssets/js/vendors/perfect-scrollbar.js"></script>
<script src="/adminAssets/js/vendors/jquery.fullscreen.min.js"></script>
<!-- Main Script -->
<script src="/adminAssets/js/main.js" type="text/javascript"></script>
-- ... Your existing scripts ... -->

<%- include("../partials/admin-footer")%>
