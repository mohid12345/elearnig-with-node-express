
</head
<%- include("../partials/header") %>
<body>
 <main class="main">
  <section class="pt-5 pb-5 ">
    <div class="container">
      <div class="row">
        <div class="col-lg-10 m-auto">
          <div class="row d-flex align-items-center justify-content-center">

            <div class="col-lg-6">
              <div class="login_wrap widget-taber-content p-5 background-white border rounded">
                <div class="p-4 bg-white">
                  <div class="text-center mb-4">
                    <h3 class="mb-3">Create an Account</h3>
                    <% if (typeof error !== 'undefined') { %>
                      <p class="text-danger"><%= error %></p>
                    <% } %>
                  </div>

                  <form method="post" action="/userSignup" onsubmit="return validateForm()">
                    <div class="mb-3">
                      <input type="text" class="form-control" required name="username" placeholder="Username" id="username">
                      <div id="usernameError" class="error-message text-danger"></div>
                    </div>

                    <div class="mb-3">
                      <input type="text" class="form-control" required name="email" placeholder="Email" id="email">
                      <div id="emailError" class="error-message text-danger"></div>
                    </div>

                    <div class="mb-3">
                      <input type="password" class="form-control" required name="password" placeholder="Password" id="password">
                      <div id="passwordError" class="error-message text-danger"></div>
                    </div>

                    <div class="mb-3">
                      <input type="password" class="form-control" required name="confirmpassword" placeholder="Confirm password" id="confirmpassword">
                      <div id="confirmpasswordError" class="error-message text-danger"></div>
                    </div>

                    <div class="mb-3">
                      <input type="number" class="form-control" required name="phoneNumber" placeholder="Phone Number" id="phoneNumber">
                      <div id="phoneNumberError" class="error-message text-danger"></div>
                    </div>

                    <div class="mb-3">
                      <button type="button" class="btn btn-primary btn-block" id="sendOTPButton" name="sendOTPBtn" onclick="sendOTP()">Send OTP</button>
                    </div>

                      <!-- timer part -->
                      <div id="timer" style="display: none;"></div>
                      <!-- <button id="sendOTPButton" onclick="sendOTP()">Resend OTP</button> -->
  

                    <div class="mb-3">
                      <input type="text" class="form-control" required name="otpInput" placeholder="Enter OTP" id="otpInput">
                    </div>

                    <div class="mb-3">
                      <button type="button" class="btn btn-primary btn-block" id="verifyOTPButton" name="verifyOTPBtn">Verify OTP</button>
                    </div>

                    <div class="form-check mb-3">
                      <input class="form-check-input" type="checkbox" name="checkbox" id="checkbox" value="">
                      <label class="form-check-label" for="exampleCheckbox12">I agree to terms &amp; Policy.</label>
                      <div id="checkError" class="error-message text-danger"></div>
                    </div>

                  <div class="mb-3">
                      <button type="submit" class="btn btn-success btn-block" name="loginbtn" id="submitButton">Submit &amp; Register</button>
                    </div>
                  </form>

                  <div class="text-muted text-center">
                    Already have an account? <a href="/login">Sign in now</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>


<script>
  // function enableVerifyButton(enable) {
  // const verifyOTPButton = document.getElementById("verifyOTPButton");
  // verifyOTPButton.disabled = !enable;
  // }
  submitButton.disabled = true;
  const sendOTPButton = document.getElementById("sendOTPButton") 

  sendOTPButton.addEventListener("click", function (e) {
      e.preventDefault();
           // Validate the form before sending OTP
      if (validateForm()) {
          const email = document.querySelector('input[name="email"]').value;
          const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;

          fetch(`/send-otp?email=${email}&phoneNumber=${phoneNumber}`)
              .then((response) => {
                  if (!response.ok) {
                      throw new Error(`HTTP error! status: ${response.status}`);
                  }
                  return response.json();
              })
              .then((data) => {
                  console.log("Response from server", data);

              if (data.error) {
              // User already exists, display error message
              Swal.fire({
                  position: 'top-center',
                  icon: 'error',
                  title: data.error,
                  showConfirmButton: false,
                  timer: 1500
              });
              } else {
              // User doesn't exist, continue with OTP sending logic
              Swal.fire({
                  position: 'top-center',
                  icon: 'success',
                  title: 'OTP sent to email successfully',
                  showConfirmButton: false,
                  timer: 1500
              });
              startResendTimer();
              }
              })
              .catch((error) => {
                  console.error("Error sending OTP", error);
              });
      } else {
          // Form is not valid, display an error message or handle it accordingly
          // alert('Form is not valid. Please check your inputs.');
          // Swal.fire({
          //     icon: "error",
          //     title: "Oops...",
          //     text: "Error sending OTP.",
          //     footer: '<a href="#">Why do I have this issue?</a>'
          //     });
      }
      enableVerifyButton(true);
  });

  // Function to validate the form
  function validateForm() {
    
      // Reset previous error messages
      resetErrorMessages();

      const username = document.getElementById('username').value;
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmpassword').value;
      const phoneNumber = document.getElementById('phoneNumber').value;
      const checkbox = document.getElementById('checkbox').value     

      // Validate username (should contain only characters without whitespace)
      const usernamePattern = /^[A-Za-z]+(?:\s[A-Za-z]+)*$/;
      if (!username.match(usernamePattern)) {
          showError('usernameError', 'Username should contain only characters with optional whitespace between first and last names');
          return false;
      }

      // Validate email
      const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
      if (!email.match(emailPattern)) {
          showError('emailError', 'Invalid email address.');
          return false;
      }

      //password length
      const passwordPattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,}$/;
      if (!password.match(passwordPattern)) {
          showError('passwordError', 'Password must be at least 6 characters with mixed alpha numberical and symbols');
          return false;
      }

      // Validate passwordconfirmation
      if (password !== confirmPassword) {
          showError('confirmpasswordError', 'Passwords do not match');
          return false;
      }

      // Validate phoneNumber (should be a number with exactly 10 digits)
      const phoneNumberPattern = /^[6-9]\d{9}$/;
      if (isNaN(phoneNumber) || !phoneNumber.match(phoneNumberPattern)) {
          showError('phoneNumberError', 'Phone number must be a number with exactly 10 digits');
          return false;
      }
      // if (isNaN(phoneNumber) || phoneNumber.length !== 10) {
      //     showError('phoneNumberError', 'Phone number must be a number with exactly 10 digits');
      //     return false;
      // }
      if(!checkbox){
        showError('checkError', 'Read Agreement and accept if OK')
      }

      
      return true; // Placeholder, replace with your actual validation logic
  }

      // Function to show error message
  function showError(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.textContent = message;
  }

  // Function to reset error messages
  function resetErrorMessages() {
      const errorElements = document.querySelectorAll('.error-message');
      errorElements.forEach((element) => {
          element.textContent = '';
      });
  }
  


  // verify otp
  const verifyOTPButton = document.getElementById("verifyOTPButton");

        verifyOTPButton.addEventListener("click", function(e) {
            e.preventDefault();

            // const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;
            const otpInput = document.querySelector('input[name="otpInput"]').value;
            fetch(`/verify-otp?otpInput=${otpInput}`,{
                method: "POST"})
            
            .then((Response) => {
                if(!Response.ok) {
                    throw new Error(`HTTP error! status: ${Response.status}`)
                }
                return Response.json();
            })
            .then((data)=>{
                console.log("Response from serve", data)
                Swal.fire({
                    position: 'top-center',
                    icon: 'success',
                    title: 'OTP verified succssfully',
                    showConfirmButton: false,
                    timer: 1500
                })
                // startResendTimer()
                submitButton.disabled = false;  

            })
            .catch((error)=>{
                console.error("Invalid OTP",error);
                Swal.fire({
                position: 'top-center',
                icon: 'error',
                title: "Invalid OTP",
                showConfirmButton: false,
                timer: 1500
            });
            })
        })

        let timerElement = document.getElementById('timer');
        let resendOTPButton = document.getElementById('sendOTPButton');
        let countdown; 

        function startResendTimer() {
                let remainingTime = 60;
                timerElement.style.display = "block";
                resendOTPButton.style.display = "none";
    
                countdown = setInterval(() => {
                    timerElement.textContent = `Resend in ${remainingTime} seconds`;
                    remainingTime--;
    
                    if (remainingTime < 0) {
                        clearInterval(countdown);
                        timerElement.style.display = "none";
                        resendOTPButton.style.display = "block";
                    }
                }, 1000);
            }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


      
<%= include("../partials/footer")%>